version: '3.8'
services:
  npaperless.services:
    image: npaperless.services
    build:
      context: .
      dockerfile: NPaperless.Services/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - npaperless-network
    depends_on:
      - npaperless.dataaccess.sql
      - minio
        
  npaperless.services.ocr:
    image: npaperless.services.ocr
    build:
      context: .
      dockerfile: NPaperless.Services.OCR/Dockerfile
    ports:
      - "8082:8082"
    networks: 
      - npaperless-network
    depends_on: 
      - rabbitmq
      - elastic_search
      #- npaperless.dataaccess.sql
      #- minio
    restart: always
  
  npaperless.webui:
    image: npaperless.webui
    build:
      context: .
      dockerfile: NPaperless.WebUI/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - npaperless-network

  npaperless.dataaccess.sql:
    image: postgres
    environment:
      POSTGRES_DB: npaperless
      POSTGRES_USER: npaperless
      POSTGRES_PASSWORD: npaperless
    ports:
      - "5432:5432"
    networks:
      - npaperless-network
        
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - npaperless-network
  
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672" # RabbitMQ Server
      - "15672:15672" # RabbitMQ Management Console
    networks:
      - npaperless-network

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: "npaperless"
      MINIO_ROOT_PASSWORD: "npaperless"
    ports:
      - "9000:9000" # Minio API
      - "9090:9090" # Minio Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9090"
    networks:
      - npaperless-network
  
  elastic_search:
    image: elasticsearch:8.7.1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - npaperless-network

  kibanba:
    image: docker.elastic.co/kibana/kibana:8.2.3
    ports:
      - "5601:5601"
    environment:
        ELASTICSEARCH_HOSTS: http://elastic_search:9200
    depends_on: 
      - elastic_search
    networks:
      - npaperless-network


volumes:
  minio_data:

networks:
  npaperless-network:
    driver: bridge
